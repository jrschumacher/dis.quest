name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Code generation and validation
  generate:
    name: Code Generation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
      
      - name: Install templ
        run: go install github.com/a-h/templ/cmd/templ@latest
      
      - name: Install sqlc
        run: go install github.com/sqlc-dev/sqlc/cmd/sqlc@latest
      
      - name: Generate templ files
        run: templ generate
      
      - name: Generate SQLC files
        run: sqlc generate
      
      - name: Verify no uncommitted changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "Generated files have uncommitted changes:"
            git diff
            exit 1
          fi

  # Comprehensive linting
  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: generate
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
      
      - name: Install templ
        run: go install github.com/a-h/templ/cmd/templ@latest
      
      - name: Install sqlc
        run: go install github.com/sqlc-dev/sqlc/cmd/sqlc@latest
      
      - name: Generate templ files
        run: templ generate
      
      - name: Generate SQLC files
        run: sqlc generate
      
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --config=.golangci.yml

  # Testing with multiple Go versions
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: generate
    strategy:
      matrix:
        go-version: ['1.23', '1.24']
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
      
      - name: Install templ
        run: go install github.com/a-h/templ/cmd/templ@latest
      
      - name: Install sqlc
        run: go install github.com/sqlc-dev/sqlc/cmd/sqlc@latest
      
      - name: Generate templ files
        run: templ generate
      
      - name: Generate SQLC files
        run: sqlc generate
      
      - name: Run tests
        run: go test -v -race -coverprofile=coverage.out ./...
      
      - name: Upload coverage to Codecov
        if: matrix.go-version == '1.23'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out
          flags: unittests

  # Build verification
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [generate, lint, test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
      
      - name: Install templ
        run: go install github.com/a-h/templ/cmd/templ@latest
      
      - name: Install sqlc
        run: go install github.com/sqlc-dev/sqlc/cmd/sqlc@latest
      
      - name: Generate templ files
        run: templ generate
      
      - name: Generate SQLC files
        run: sqlc generate
      
      - name: Build application
        run: go build -v -o bin/disquest ./
      
      - name: Verify binary
        run: ./bin/disquest --help