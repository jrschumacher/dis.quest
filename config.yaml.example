# Example configuration for dis.quest
# Copy this file to `config.yaml` and adjust the values as needed.

# Runtime environment. Typically "development" or "production".
app_env: development

# Port for the HTTP server to listen on.
port: "3000"

# URL of your PDS (Personal Data Server) instance.
pds_endpoint: http://localhost:4000

# Database connection string used by the application.
# PostgreSQL is the only supported database engine.

# PostgreSQL (for local development with Docker Compose)
database_url: "postgres://disquest:disquest@localhost:5432/disquest?sslmode=disable"

# For production, use your hosted PostgreSQL URL (e.g., Neon, AWS RDS, etc.)
# database_url: "postgres://user:pass@host:port/dbname?sslmode=require"

# Private JSON Web Key Set used to sign tokens.
# Replace with the contents of your private JWKS.
jwks_private: |
  {
    "keys": [
      # ...your private keys here...
    ]
  }

# Public JSON Web Key Set served under /.well-known/jwks.json.
# Replace with the public portion matching jwks_private.
jwks_public: |
  {
    "keys": [
      # ...your public keys here...
    ]
  }

# Publicly reachable domain for this app (scheme + host).
# For development, use your ngrok URL (e.g., https://abc123.ngrok.app)
public_domain: http://localhost:3000

# Human friendly name displayed in OAuth metadata and UI.
app_name: dis.quest

# OAuth client identifier served at /auth/client-metadata.json
# For development, use your ngrok URL (e.g., https://abc123.ngrok.app/auth/client-metadata.json)
oauth_client_id: https://dis.quest/auth/client-metadata.json

# Redirect URL for OAuth callbacks
# For development, use your ngrok URL (e.g., https://abc123.ngrok.app/auth/callback)
oauth_redirect_url: https://dis.quest/auth/callback

# OAuth provider implementation to use: "manual" (current) or "tangled" (tangled-sh library)
# Use "manual" for your current implementation, "tangled" to test the tangled-sh library
oauth_provider: manual

# Logging verbosity. One of: DEBUG, INFO, WARN, ERROR.
log_level: INFO
